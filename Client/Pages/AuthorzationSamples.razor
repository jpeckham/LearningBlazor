@page "/AuthorizationSamples"

<button @onclick="LogUsername">Log username</button>

<p>@_authMessage</p>

<AuthorizeView Roles="SecureMethod">
    <Authorized>
        
        <h1>Hello, @context.User.Identity.Name!</h1>
        <p>You can only see this content if you're authorized.</p>
        <button @onclick="SecureMethod">Authorized Only Button</button>
        <p>private action: @PrivateAction</p>
    </Authorized>
    <NotAuthorized>
        <h1>Authentication Failure!</h1>
        <p>Must be in role of SecureMethod</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string _authMessage;

    private async Task LogUsername()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }
    private string PrivateAction = "Not Executed";
    private void SecureMethod()
    {
        PrivateAction = "Executed Successfully";
    }
}